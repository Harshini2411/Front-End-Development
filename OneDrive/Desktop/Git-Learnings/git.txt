-->GIT BASH <---
Ctrl+l:clear
:q->esc
1/git config --global user.name="Harshini"
2/git config --global user.email="Harshini9110@gmail.com"
3/git config --global color.ui auto
4/git config -l //it lists all files

<-------ADDING FILES TO STAGING AREA---------->

5/mkdir learningGit
6/git init .  //it initialises all brand-new  files in empty git repo
7/touch index.html //creates index.html file
8/ ls
9 /git status->status of files like what r things to commit,untracked files,etc..
10/git add . ->adds untracked files to staging area
10* to unstage->git rm --cached index.html
//git rm -r --cached .[if multiple files are there to unstage at a atime/]
10** git status->same o/p as 10

<-------Using commit[a savepoint] from staging area, bfr start implementing another feature---------->
11/now we can commit these-> git commit -m "index.html has been committed."
12/git log->shows all the commits history
13/git show (hash code of commit)->expanded view of particular git obj history
14/vi index.html->opens the file,:wq->saves d file
15/cat index.html//displays content of that file
16/git diff->shows d diff b/w what has been newly added & what has been committed  

<----AMEND COMMITS----->
*what if there is no meaningful mssg given while committing,so we amend by giving new meaningful mssg
17/git commit --amend -m "added new msg"
->when we hit:git log ,the mssg gets updated


<----Git Push---->[git to github]
//If comp gets corrupted or breaks we loose the project if its on local machine
||to store it on remote server we use git push cmd

**to check on which remote repo we r working on
->git remote -v
 **to set url on github
->git remote set-url origin [link of repo]
->git push -u origin main


<--------GIT PULL---------->[github to git]
 ->changes made in remote repo[like commit] r not updated on local repo[git],so to match dat we use GIT-LOCAL


<--------GIT BRANCHES------->
->git branch (new branch name)//to create a branch -->it jsz creates branch
|||||||| git checkout -b [branch-name]->used to create branch & shifts to it.
->git branch/tells on which branch we r working on local server[git]
->git branch -r(remote)/tells on which branch we are working on remote server[github]
->git branch -a//tells all branches on both servers
->git checkout (new branch name)///to switch b/w d branches || 
||||||||git branch -M [branch name]->it entirely moves from one branch to another
->git checkout -//it shifts to previous branch
->git checkout -d [branch-name]-->deletes particular branch
